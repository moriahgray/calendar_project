trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: echo "Starting build process..."
  displayName: 'Display Start Message'

# Install Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js 14.x'

# Install npm dependencies
- task: Npm@1
  inputs:
    command: 'install'
  displayName: 'Run npm install'

# Run build and debug output
- script: |
    npm run build || { echo "Build failed. Exiting."; exit 1; }
    echo "Build completed for $(buildConfiguration) configuration."
    echo "Contents of the build sources directory:"
    ls -la $(Build.SourcesDirectory)
    echo "Contents of the dist directory:"
    ls -la $(Build.SourcesDirectory)/dist || echo "Dist directory does not exist yet."
  displayName: 'Run build and debug output'
  env:
    NODE_ENV: 'production'

# Verify dist directory exists
- script: |
    if [ -d "$(Build.SourcesDirectory)/dist" ]; then
      echo "Dist directory exists."
    else
      echo "Error: Dist directory does not exist. Exiting with error."
      exit 1
    fi
  displayName: 'Check for dist directory'

# Archive build output
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/dist'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/build-$(Build.BuildId).zip'
  displayName: 'Archive Build Output'

# Publish build artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Build Artifact'